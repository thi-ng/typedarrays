#+SETUPFILE: ../src/setup.org

* Contents                                                         :toc_4_gh:
 - [[#thingtypedarraystestcore][thi.ng.typedarrays.test.core]]
     - [[#main-tests][Main tests]]
     - [[#complete-namespace-definition][Complete namespace definition]]

* thi.ng.typedarrays.test.core

** Main tests

#+BEGIN_SRC clojure :noweb-ref test
  (deftest test-ctors
    (is (= :uint8 (a/array-type (a/uint8 1))))
    (is (= :uint8-clamped (a/array-type (a/uint8-clamped 1))))
    (is (= :int8 (a/array-type (a/int8 1))))
    (is (= :uint16 (a/array-type (a/uint16 1))))
    (is (= :int16 (a/array-type (a/int16 1))))
    (is (= :uint32 (a/array-type (a/uint32 1))))
    (is (= :int32 (a/array-type (a/int32 1))))
    (is (= :float32 (a/array-type (a/float32 1))))
    (is (= :float64 (a/array-type (a/float64 1)))))
#+END_SRC

** Complete namespace definition

#+BEGIN_SRC clojure :tangle ../babel/test/thi/ng/typedarrays/test/core.cljs :noweb yes :mkdirp yes :padline no
  (ns thi.ng.typedarrays.test.core
    (:require
     [thi.ng.typedarrays.core :as a]
     [cemerick.cljs.test :as t :refer-macros [is deftest]]))

  (enable-console-print!)

  <<test>>

  (if (a/typed-arrays-supported?)
    (t/run-all-tests)
    (prn "Can't test - typed arrays not supported!"))
#+END_SRC
